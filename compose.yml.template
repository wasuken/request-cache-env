services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    environment:
      TZ: "Asia/Tokyo"
    volumes:
      - ./src:/app
      - node_modules:/app/node_modules
    command: npm run dev
    user: node
    restart: always
    depends_on:
      - mysql
    networks:
      - my_network
  app-test:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4001:3000"
    environment:
      TZ: "Asia/Tokyo"
    volumes:
      - ./src:/app
      - node_modules:/app/node_modules
    command: npm run testing
    user: node
    restart: always
    depends_on:
      - mysql
    networks:
      - my_network
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: rcache
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: "Asia/Tokyo"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
    restart: always
    networks:
      - my_network
  cron:
    build:
      context: ./cron
    restart: always
    networks:
      - my_network
  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    ports:
      - 4080:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=mysql
    networks:
      - my_network

volumes:
  node_modules:

networks:
  my_network:
    driver: bridge
